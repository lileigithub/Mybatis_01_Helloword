<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lilei.dao.EmployeeDynamicSqlMapper">
	<select id="getEmpByConditionIf" resultType="com.lilei.bean.Employee">
		select * from tbl_employee
		<!-- where 1=1 -->
		<where> <!-- 会将放在前面的多出来的and or 去掉 -->
		<!-- test:判断表达式 （OGNL） -->
		<if test="id!=null">
			id=#{id} 
		</if>
		<if test="lastName!=null &amp;&amp; lastName!=&quot;&quot;">
			and last_name=#{lastName}
		</if>
		<if test="email!=null and email.trim()!=&quot;&quot;">
			and email=#{email}
		</if>
		<if test="gender==1 and gender==2">
			and gender=#{gender}
		</if>
		</where>
	</select>
	
	<!--  
	<select id="">
		拼串后的整个字符串
		<trim prefix="加前缀" suffix="加后缀" prefixOverrides="串前面去掉的字符" suffixOverrides="串后面去掉的字符"></trim>
	</select>
	-->
	<!-- <select id="">
	<where>
		<choose>
			<when test="id!=null">
				id=#{id}
			</when>
			<when test="lastName">
				last_name=#{lastName}
			</when>
			<otherwise>
				gender = 1
			</otherwise>
		</choose>
	</where>
	</select>
	
	<update id="">
		update tbl_employee set
	 	<set>
	 	<if test="">
	 		id=#{id}
	 	</if>
	 	</set>
	 </update>
	 
	 trim也行
	
	
	<select id="">
	 	select * from tbl_employee where id in
	 	<foreach collection="ids" item="item_id" separator="," open="(" close=")">
	 		#{item_id}
	 	</foreach>
	 </select>
	 
	  <select id="">
	 	insert into tbl_employee values
	 	<foreach collection="emps" item="emp" separator=",">
	 		(#{emp.lastName},#{emp.email},#{emp.gender},#{emp.dept.deptName})
	 	</foreach> 
	 </select>
	 
	 批量操作 需要数据库连接属性allowMultiQueries
	 <select id="">
	 	<foreach collection="emps" item="emp" separator=";">
	 		insert into tbl_employee values
	 		(#{emp.lastName},#{emp.email},#{emp.gender},#{emp.dept.deptName})
	 	</foreach> 
	 </select>
	 
	 Oracle不支持values(),(),()
	 支持的：多个insert 放在 begin end之间
	 begin
	 	insert into ....
	 	...
	 	...
	 end
	 
	 或者
	 利用中间表
	 insert into tbl_employees(id,last_name,email)
	 select employees_seq.nextval,lastName,email from(
	 	select 'name1' lastName,'email1' email from dual
	 	union 
	 	....
	 	union
	 	....
	 )
	 
	 内置参数：
	 _paramter:代表整个参数
	 单个参数就代表这个参数，多个参数封装成map，代表这个map
	 
	 _databaseId:如果配置了databaseIdProvider标签
	 
	 <select id="">
	 	<if test="_databaseId=='mysql'">
	 		mysql数据库对应的语句
	 	</if>
	 	<if test="_databaseId=='oracle'">
	 		select * from tbl_employee
	 		<if test="_paramter!=null">
	 			<where>
	 				id=#{_paramter.id}
	 			</where>
	 		</if>
	 	</if>
	 </select>
	 
	 <sql>抽取可重用的sql片段 <include>引用 <property/>自定义属性,用${}取值
	 <sql id="insertColumn">
	 	last_name,email,gender,${testColumn}
	 </sql>
	 
	 <select id="">
	 	insert into tbl_employee(
	 	<include refid="insertColumn">
	 		<property name="testColumn" value="abc"/>
	 	</include>
	 	) values
	 </select>
	 
	 -->
	 
	 
	 
	 
	 
</mapper>